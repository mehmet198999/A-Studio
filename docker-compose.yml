version: "3.9"
services:
  traefik:
    image: traefik:v2.10
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BRANCH_NAME}.app.a-server.ch`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - web

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${BRANCH_NAME}.app.a-server.ch`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - web

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - web

  worker:
    build: ./backend
    command: python -m app.worker
    depends_on:
      - backend
      - redis
    networks:
      - web

networks:
  web:
    driver: bridge
